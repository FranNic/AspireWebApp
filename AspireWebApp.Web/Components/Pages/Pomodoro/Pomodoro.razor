@page "/pomodoro"
@rendermode InteractiveServer

@using AspireWebApp.Web.Components.Pages.Pomodoro
@using Web.Components.Layout

@inject PomodoroState PomodoroState

<PageTitle>Pomodoro</PageTitle>

<h1>Pomodoro</h1>
<div class="row">
    <div class="col-sm-12" align="center">
        <h3 style="font-size: 5em;">
            <PomodoroStateTimer ShowSession="false"/>
        </h3>
        <h6>Session: @PomodoroState.SessionIn</h6>
        <div class="col-sm-2" align="center">
            <div class="btn-group" role="group" aria-label="Basic example">
                <button class="btn btn-primary" @onclick="Start" disabled="@PomodoroState.IsRunning">Start</button>
                <button class="btn btn-warning" @onclick="Reset">Reset</button>
                <button class="btn btn-danger" @onclick="Stop" disabled="@PomodoroState.IsStopped">Stop</button>
            </div>
        </div>
    </div>
</div>

@* <audio id="successPomodoro" src="mario_coin_sound.mp3" /> *@
@code {
    [CascadingParameter] public AppState AppState { get; set; } = null!;

    private void Start() => PomodoroState.StartTimer();

    private void Reset() => PomodoroState.InitializeTimer();

    private void Stop() => PomodoroState.StopTimer();

    protected override async Task OnInitializedAsync()
    {
        PomodoroState.OnChangedSession += PlaySound;
    }

    // Play sound when session changes
    private void PlaySound()
    {
        // JsRuntime.InvokeAsync<string>("PlaySound"); // this calls "window.PlaySound()"
        Console.WriteLine("PlaySound");
    }

    // Dispose all events
    public void Dispose()
    {
        // PomodoroState.OnChangedSession -= PlaySound;
    }

}
